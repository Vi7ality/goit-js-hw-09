{"mappings":"YA2BA,SAASA,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEpC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACAI,EAAQ,CAACN,WAAUC,UAE3BM,EAAO,CAACP,WAAUC,S,GAEbA,E,IArCMQ,SAASC,cAAc,SAC/BC,iBAAiB,UAGxB,SAAsBC,GACpBA,EAAMC,iBACNC,QAAQC,IAAIH,EAAMI,cAAcf,MAAMgB,OACtCH,QAAQC,IAAIH,EAAMI,cAAcE,KAAKD,OACrCH,QAAQC,IAAIH,EAAMI,cAAcG,OAAOF,OAKvC,IAJA,IAAIG,EAAQC,OAAOT,EAAMI,cAAcf,MAAMgB,OACvCC,EAAOG,OAAOT,EAAMI,cAAcE,KAAKD,OACvCE,EAASE,OAAOT,EAAMI,cAAcG,OAAOF,OAExCK,EAAI,EAAGA,GAAKH,EAAQG,GAAK,EAChCvB,EAAcuB,EAAGF,GACdG,MAAK,SAAAC,G,IAAGxB,EAAQwB,EAARxB,SAAUC,EAAKuB,EAALvB,MACjBa,QAAQC,IAAI,uBAAwCU,OAAfzB,EAAS,QAAYyB,OAANxB,EAAM,M,IAE3DyB,OAAM,SAAAF,G,IAAGxB,EAAQwB,EAARxB,SAAUC,EAAKuB,EAALvB,MAClBa,QAAQC,IAAI,sBAAuCU,OAAfzB,EAAS,QAAYyB,OAANxB,EAAM,M,IAE7DmB,GAASF,C,IAqBbnB,EAAc,EAAG,MACdwB,MAAK,SAAAC,G,IAAGxB,EAAQwB,EAARxB,SAAUC,EAAKuB,EAALvB,MACjBa,QAAQC,IAAI,uBAAwCU,OAAfzB,EAAS,QAAYyB,OAANxB,EAAM,M,IAE3DyB,OAAM,SAAAF,G,IAAGxB,EAAQwB,EAARxB,SAAUC,EAAKuB,EAALvB,MAClBa,QAAQC,IAAI,sBAAqCU,OAAfzB,EAAS,QAAYyB,OAANxB,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["const formEl = document.querySelector('.form')\nformEl.addEventListener('submit', handleSubmit)\n\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n  console.log(event.currentTarget.delay.value);\n  console.log(event.currentTarget.step.value);\n  console.log(event.currentTarget.amount.value)\n  let delay = Number(event.currentTarget.delay.value);\n  const step = Number(event.currentTarget.step.value);\n  const amount = Number(event.currentTarget.amount.value);\n\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    delay += step;\n\n  }\n}\n\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        if (shouldResolve) { \n            resolve({position, delay})\n           } else {\n    reject({position, delay})\n  }\n      }, delay)\n    })\n\n}\n\ncreatePromise(2, 3500)\n  .then(({ position, delay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n"],"names":["$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","event","preventDefault","console","log","currentTarget","value","step","amount","delay1","Number","i","then","param","concat","catch"],"version":3,"file":"03-promises.6cb328dd.js.map"}